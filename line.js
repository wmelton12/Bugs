// Generated by CoffeeScript 1.6.3
(function() {
  var Line;

  Line = (function() {
    function Line(x1, y1, x2, y2, draw, drawLine) {
      this.x1 = x1;
      this.y1 = y1;
      this.x2 = x2;
      this.y2 = y2;
      this.draw = draw;
      this.drawLine = drawLine != null ? drawLine : true;
      if (this.drawLine) {
        this.draw.line(this.x1, this.y1, this.x2, this.y2).stroke({
          width: 1,
          color: 'red'
        });
      }
      this.m = (this.y2 - this.y1) / (this.x2 - this.x1);
      this.d = this.y1 - this.m * this.x1;
    }

    Line.prototype.intersection = function(other) {
      var x, y;
      if (this.m === other.m && this.d === other.d) {
        return true;
      } else if (this.m === other.m && this.d !== other.d) {
        return false;
      } else {
        x = (other.d - this.d) / (this.m - other.m);
        y = this.m * x + this.d;
      }
      return [x, y];
    };

    Line.prototype.passesThroughLine = function(other) {
      var x, y, _ref;
      _ref = this.intersection(other), x = _ref[0], y = _ref[1];
      if (((this.x1 < x && x < this.x2) || (this.x2 < x && x < this.x1)) && ((this.y2 < y && y < this.y1) || (this.y2 < y && y < this.y1)) && ((other.x1 < x && x < other.x2) || (other.x2 < x && x < other.x1)) && ((other.y1 < y && y < other.y2) || (other.y2 < y && y < other.y1))) {
        return true;
      } else {
        return false;
      }
    };

    return Line;

  })();

  this.Line = Line;

}).call(this);
